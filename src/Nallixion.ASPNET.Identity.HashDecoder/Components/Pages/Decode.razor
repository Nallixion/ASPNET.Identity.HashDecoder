@page "/decode"
@rendermode InteractiveServer
@inject ILogger<Decode> Logger

@using Nallixion.ASPNET.Identity.HashDecoder.Components.ViewModels

<PageTitle>Decode</PageTitle>

<h1>Decode</h1>

<form method="post" @onsubmit="Submit" @formname="starship-plain-form">
    <AntiforgeryToken />
    <div class="container overflow-hidden">
        <div class="callout">
            Sample asp.net v3 256bit hash: AQAAAAEAACcQAAAAEG7xx8smhzcYFaAhPSRj1rgxfAoqKBv4WM/4R+Z0SvFxtxuMkfgBS28p1MQzvV0OeQ== <br />
            Sample asp.net v2 hash: AQAAAAEAACcQAAAAEG7xx8smhzcYFaAhPSRj1rgxfAoqKBv4WM/4R+Z0SvFxtxuMkfgBS28p1MQzvV0OeQ==
        </div>
        <div class="row gy-5">
            <div class="col-md-2">
                <label for="txtHash">
                    Hash:
                </label>
            </div>
            <div class="col-md-10">
                <InputText @bind-Value="Model!.PasswordHash" class="wideinput" id="txtHashcatFormat" />
            </div>
        </div>
        <div class="row gy-10">
            <button type="submit">Submit</button>
        </div>
    </div>
    <div class="container overflow-hidden">
        @if (submitted)
        {
            @if (@Model!.isValidHash)
            {
                <h3>Hash Info</h3>
                <div class="row">
                    <div class="col-md-2">
                        <label>
                            Hash Version:
                        </label>
                    </div>
                    <div class="col-md-10">
                        @Model.HashVersion
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <label>
                            ShaType:
                        </label>
                    </div>
                    <div class="col-md-10">
                        @Model.ShaType
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <label>
                            Iterations:
                        </label>
                    </div>
                    <div class="col-md-10">
                        @Model.IterCount
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <label for="txtHashcatFormat">
                        Hashcat Format:
                    </label>
                    </div>
                    <div class="col-md-10">
                        <InputText @bind-Value="Model!.HashcatFormat" disabled="disabled" class="wideinput" id="txtHashcatFormat" />
                    </div>
                </div>
            }
        else
            {
                <p>Not a valid hash</p>
            }
        }
    </div>

</form>

@code {
    [SupplyParameterFromForm]
    public HashInfo? Model { get; set; }
    bool submitted = false;

    protected override void OnInitialized() => Model ??= new();

    private void Submit()
    {
        Logger.LogInformation("ShaType = {ShaTpe}", Model?.ShaType);
        HashInfo hashInfo = new HashInfo();
        var asphash = new AspNetIdentityHashInfo(Model!.PasswordHash);
        submitted = true;
        Model.isValidHash = asphash.isValidHash;
        if (asphash.isValidHash)
        {
            Model.HashcatFormat = asphash.HashcatFormat;
            Model.ShaType = asphash.ShaType;
            Model.HashVersion = asphash.HashVersion.ToString();
            Model.IterCount = asphash.IterCount;
        }
    }
}
